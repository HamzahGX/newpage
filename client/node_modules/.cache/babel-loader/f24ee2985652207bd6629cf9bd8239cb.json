{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  products: []\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = state.products.find(item => item.id === action.payload.id);\n\n      if (item) {\n        item.quantity += action.payload.quantity;\n      } else {\n        state.products.push(action.payload);\n      }\n    },\n    removeItem: (state, action) => {\n      state.products = state.products.filter(item => item.id !== action.payload);\n    },\n    resetCart: state => {\n      state.products = [];\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addToCart,\n  removeItem,\n  resetCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/hamzag/Desktop/landPage/landingPage/client/src/redux/cartReducer.js"],"names":["createSlice","initialState","products","cartSlice","name","reducers","addToCart","state","action","item","find","id","payload","quantity","push","removeItem","filter","resetCart","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;AACnCI,EAAAA,IAAI,EAAE,MAD6B;AAEnCH,EAAAA,YAFmC;AAGnCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5B,YAAMC,IAAI,GAAGF,KAAK,CAACL,QAAN,CAAeQ,IAAf,CAAqBD,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAAzD,CAAb;;AACA,UAAIF,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACI,QAAL,IAAiBL,MAAM,CAACI,OAAP,CAAeC,QAAhC;AACD,OAFD,MAEO;AACLN,QAAAA,KAAK,CAACL,QAAN,CAAeY,IAAf,CAAoBN,MAAM,CAACI,OAA3B;AACD;AACF,KARO;AASRG,IAAAA,UAAU,EAAE,CAACR,KAAD,EAAOC,MAAP,KAAkB;AAC5BD,MAAAA,KAAK,CAACL,QAAN,GAAeK,KAAK,CAACL,QAAN,CAAec,MAAf,CAAsBP,IAAI,IAAEA,IAAI,CAACE,EAAL,KAAYH,MAAM,CAACI,OAA/C,CAAf;AACD,KAXO;AAYRK,IAAAA,SAAS,EAAGV,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACL,QAAN,GAAiB,EAAjB;AACD;AAdO;AAHyB,CAAD,CAA7B,C,CAqBP;;AACA,OAAO,MAAM;AAAEI,EAAAA,SAAF;AAAYS,EAAAA,UAAZ;AAAuBE,EAAAA;AAAvB,IAAqCd,SAAS,CAACe,OAArD;AAEP,eAAef,SAAS,CAACgB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  products: [],\n};\n\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = state.products.find((item) => item.id === action.payload.id);\n      if (item) {\n        item.quantity += action.payload.quantity;\n      } else {\n        state.products.push(action.payload);\n      }\n    },\n    removeItem: (state,action) => {\n      state.products=state.products.filter(item=>item.id !== action.payload)\n    },\n    resetCart: (state) => {\n      state.products = []\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addToCart,removeItem,resetCart } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}